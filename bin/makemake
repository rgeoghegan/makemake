#!/usr/bin/env ruby
require 'rubygems'
require 'makemake_tasks'

def task_by_name name
    name = name.to_s
    Rake::Task.tasks.each do |t|
        if t.name == name
            return t
        end
    end
end

def parse_args
    options = {:package => false}
    parser = OptionParser.new do |opts|
        opts.banner = "Usage: makemake.rb COMMAND
	COMMAND: one of clear, build"

        opts.on("-p", "--[no-]package",
        	"Build packaged (self-contained) html") do |p|
		    Package.instance.enable = p
		    options[:package] = true
		end
    end.parse!

    if ARGV.length != 1
        raise ArgumentError.new(
        	"Wrong number of arguments (#{ARGV.length}, must be 1)"
        )
    elsif ! ["build", "clear"].include?(ARGV[0])
        raise ArgumentError.new(
        	"Command must be on of clear, build (not #{ARGV[0]})"
        )
    end

    return options, ARGV[0]
end

def find_coffee_or_die
	begin
		sh "which coffee"
	rescue RuntimeError
		puts "Could not find coffee-script executable coffee in path."
		exit 1
	end
end

begin
    opts, cmd = parse_args
rescue ArgumentError => e
    puts e
    exit 1
end

task_name = "default"
if cmd == "clear"
	task_name = "clear"
elsif cmd == "build" and opts[:package]
	task_name = "package"
end

find_coffee_or_die

task_by_name(task_name).invoke()